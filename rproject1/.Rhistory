3.2.3
3_4
3+4
version
version -help
print ("hello world")
packages
ls
rtvs::debug_source("script.R")
5+3
4+1
9-2
6/7
6/0
4+5 *3
(4+3) *5
4^5
4^1000
NA
nan
NaN
2/1000000
print 6
print   (6)
print(NA)
sin(2pi)
sin
1==1
df=23
DF=12
df+DF
DF==df
DF!=df
!34
34
12 < 2
12> 2
x = 5
x
x *90
x
var1 = 1000
var2 = var1 *9
var2
var
rtvs::debug_source("script.R")
56 + 5
1:5
f = 1:5
f
pritnt (f)
print	(f)
vec = 1:5
vec * 34
version
install.packages("")
'craig'
install.packages('gapminder')
mass <- 47.5 age <- 122 mass <- mass * 2.3 age <- age - 20
mass
age
install.packages('ggplot2, plyr')
install.packages('ggplot2')
install.packages('plyr')
installed.packages()
installed.packages('ggplot2')
installed.packages('plyr')'
a
;
....
ee
version
www\
install.packages('ggplot2')
install.packages('gapminder')
install.packages('plyr')
mass <- 47.5 age <- 122 mass <- mass * 2.3 age <- age - 20
mass
inst
install.packages('dplyr')
installed.packages('dplyr')
installed.packages('dplyrx')
cats=read.csv('cats.csv')
cats
str(cats)
cats$coat
as.numeric(cats$coat)
as.character(cat$coat)
as.character(cats$coat)
class(as.character(cats$coat))
str(cats)
cats
cats$coat = as.character(cats$coat)
str(cats)
rtvs::debug_source("script.R")
rtvs::debug_source("script.R")
rtvs::debug_source("script.R")
rtvs::debug_source("script.R")
rtvs::debug_source("script.R")
rtvs::debug_source("script.R")
rtvs::debug_source("script.R")
rtvs::debug_source("script.R")
cats
rtvs::debug_source("script.R")
rtvs::debug_source("script.R")
rtvs::debug_source("script.R")
source("C:/src/R/rproject1/rproject1/script.R", encoding = "Windows-1252")
vec
cats
cats
rtvs::debug_source("script.R")
matrix_example <- matrix(0, ncol = 6, nrow = 3) matrix_example
class(matrix_example)
typeof(matrix_example)
str(matrix_example)
dim(matrix_example)
nrow(matrix_example)
ncol(matrix_example)
length(matrix_example)
m2 = matrix(0,ncol=5,nrow=10)
m2
dim (m2)
m2 = matrix(1:50,ncol=5,nrow=10)
m2
m2 = matrix(1:50,ncol=5,nrow=10,byrow = TRUE)
m2
dataTypes <- c('double', 'complex', 'integer', 'character', 'logical') dataStructures <- c('data.frame', 'vector', 'factor', 'list', 'matrix') answer <- list(dataTypes, dataStructures)
ansari.test
answer
dataTypes
class(dataTypes)
cats = read.csv('cats.csv')
str(cats)
str(cats)
 this script loads and analyzes cats = read.csv('cats.csv') str(cats)
source("C:/src/R/rproject1/rproject1/script.R", echo = TRUE, encoding = "Windows-1252")
source("C:/src/R/rproject1/rproject1/script.R", encoding = "Windows-1252")
source("C:/src/R/rproject1/rproject1/script.R", encoding = "Windows-1252")
rtvs::debug_source("script.R")
cats
m2 = matrix(c(4,1,9,5,10,7),nrow = 3,ncol=2,byrow = TRU)
m2 = matrix(c(4,1,9,5,10,7),nrow = 3,ncol=2,byrow = TRUE)
m2
source("C:/src/R/rproject1/rproject1/script.R", encoding = "Windows-1252")
cbind(cats,cats)
wideCats = cbind(cats,cats)
View(wideCats)
rbind(cats,cats)
cats
age = c(1,2,6,8,11)
cats$age =age
age = c(1,2,6)
cats$age =age
cats
source("C:/Users/craig/AppData/Local/Temp/~vs9F46.R", encoding = "Windows-1252")
source("C:/Users/craig/AppData/Local/Temp/~vs9F46.R", encoding = "Windows-1252")
gap
source("C:/Users/craig/AppData/Local/Temp/~vs9F46.R", encoding = "Windows-1252")
gap
source("C:/Users/craig/AppData/Local/Temp/~vs9F46.R", encoding = "Windows-1252")
colnames(gap)
source("C:/src/R/rproject1/rproject1/Script1.R", encoding = "Windows-1252")
source("C:/src/R/rproject1/rproject1/Script1.R", echo = TRUE, encoding = "Windows-1252")
source("C:/src/R/rproject1/rproject1/Script1.R", echo = TRUE, encoding = "Windows-1252")
source("C:/src/R/rproject1/rproject1/Script1.R", echo = TRUE, encoding = "Windows-1252")
source("C:/src/R/rproject1/rproject1/Script1.R", echo = TRUE, encoding = "Windows-1252")
sum(as.numeric(gap$pop))
source("C:/src/R/rproject1/rproject1/Script1.R", encoding = "Windows-1252")
numbers = c(1, 5, 10, 15, 3, 5, 67) numbers
numbers >= 10
numbers [numbers >= 10]
mean(numbers)
numbers = c(1, 5, 10, 15, 3, 5,67,NA,NA)
mean(numbers)
is.NA(numbers)
is.na(numbers)
numbers[!is.na(numbers)]
mean(numbers[!is.na(numbers)])
numbers >= 10
gap$country == 'Canada'
gap$country == 'Canada'
gap[gap$country == 'Canada',]
gap[gap$country == 'Asia',]
gap[gap$continent == 'Asia',]
asia = gap[gap$continent == 'Asia',]
head(gap)
tail(gap)
gap[1000,1005,]
gap[1000:1005,]
gap$continent == 'Asia'
unique[asia$continent]
unique(asia$continent)
unique(asia$continent)
text %in c('a''chesscake')
text[ %in c('a''chesscake')]
text[ %in c('a','cheesscake')]
text[ %IN c('a','cheesscake')]
text[ %in% c('a','cheesscake')]
text[ text %in% c('a','cheesscake')]
text[text %in% c('a','cheesscake')]
text[text %in% c('a','cheesecake')]
gapGDP = gap[gap$country == 'China', 'Canada']
gapGDP
gapGDP = gap$gdpPercap[gap$country == 'China', 'Canada']
gapGDP = gap$gdpPercap[c(gap$country == 'China', 'Canada')]
gapGDP
gapGDP = gap$gdpPercap[c(gap$country == 'China')]
gapGDP
gap$gdpPercap["China"]
gapGDP = gap$gdpPercap[gap[gap$country == 'China']]
countries = gap$country %IN% c("China", 'Canada) countries = gap$country %IN% c("China", 'Canada')
countries = gap[gap$country %IN% c("China", 'Canada')]
countries = gap[gap$country %in% c("China", 'Canada')]
countries = gap[gap$country %in% c("China", 'Canada')]
countries = gap[gap$country %in% c('China', 'Canada')]
countries = gap[gap$country == c('China', 'Canada')]
countries = gap(gap$country == c('China', 'Canada'))
countries = gap[gap$country == c('China', 'Canada')]
countries = gap[gap$country %in% c('China', 'Canada')]
gap[1000:1005,]
gap$country
gap$country %in% c('China', 'Canada')]
gap$country %in% c('China', 'Canada')
v1 = ga[gap$country %in% c('China', 'Canada')]
v1 = gap[gap$country %in% c('China', 'Canada')]
v1 = gap$continent[gap$country %in% c('China', 'Canada')]
v1
countries = gap$continent[gap$country %in% c('China', 'Canada')]
countries
countries = gap$country[gap$country %in% c('China', 'Canada')]
countries
gpd = gap$gdpPercap[unique(countries)]
gpd
View(gdp)
View(gpd)
countries = gap[gap$country[gap$country %in% c('China', 'Canada')]]
countries = gap[gap$country %in% c('China', 'Canada')]
countries = gap[gap$country %in% c('China', 'Canada'),]
countries
mean(countries$gdpPercap)
gap[1000:1005,]
gapGDP = gap$gdpPercap[gap[gap$country == 'China']]
gpd = gap$gdpPercap[unique(countries)]
mean(countries$gpd = gap$gdpPercap[unique(countries)] mean(countries$gpd = gap$gdpPercap[unique(countries)])
mean(countries$gdpPercap)
